Tarea;Titulo de tarea;Resumen de enunciado;Categoría de tarea;Tipo de tarea;Número de estudiantes;Carpeta
1;Video de Presentación;Crear un video de presentación personal.;automatizada;obligatoria;1;T_01_OB
2;Clasificación de los lenguajes de programación;Investigar y clasificar los lenguajes de programación según diferentes criterios.;manuscrita;obligatoria;1;T_02_OB
3;Tareas esenciales de un lenguaje ensamblador;Implementar tareas esenciales utilizando un lenguaje ensamblador.;automatizada;obligatoria;1;T_03_OB
4;Diseño de la calculadora de Stibitz;Diseñar una calculadora basada en el modelo de George Stibitz.;manuscrita;obligatoria;1;T_04_OB
5;Construcción de la calculadora de Stibitz;Implementar el diseño de la calculadora de Stibitz.;automatizada;obligatoria;1;T_05_OB
6;Implementación del Test de Miller-Rabin;Implementar el test de primalidad de Miller-Rabin.;automatizada;obligatoria;1;T_06_OB
7;Diseño de un tipo de dato para grandes números y estimación de PI;Diseñar un tipo de dato para manejar grandes números y usarlo para estimar PI.;automatizada;obligatoria;1;T_07_OB
8;Errores a través de los módulos de un compilador;Analizar los errores que pueden ocurrir en los diferentes módulos de un compilador.;manuscrita;obligatoria;1;T_08_OB
9;Máquina de diferencias;Estudiar y construir una máquina de diferencias.;automatizada;obligatoria;1;T_09_OB
10;¿Cómo se inventaron los números imaginarios?;Investigar la invención de los números imaginarios.;manuscrita;obligatoria;1;T_10_OB
11;Ampliación y mejoramiento del computador propuesto por el Prof. Peña;Ampliar y mejorar el computador propuesto por el Prof. Peña.;automatizada;obligatoria;1;T_11_OB
12;Decompilador;Desarrollar un decompilador.;automatizada;obligatoria;1;T_12_OB
13;Computación cuántica: Implementación del algoritmo de búsqueda de Grovers;Implementar el algoritmo de búsqueda de Grovers en computación cuántica.;automatizada;obligatoria;1;T_13_OB
14;VHDL y Hardware evolutivo;Estudiar y aplicar VHDL y hardware evolutivo.;automatizada;obligatoria;1;T_14_OB
15;Repertorio de microinstrucciones para un computador neuronal;Desarrollar un repertorio de microinstrucciones para un computador neuronal.;automatizada;obligatoria;1;T_15_OB
16;Computador virtual sobre un sistema de red Ad Hoc;Implementar un computador virtual sobre un sistema de red Ad Hoc.;automatizada;obligatoria;1;T_16_OB
17;Presente, pasado y futuro simples en un idioma artificial;Estudiar los tiempos verbales en un idioma artificial.;manuscrita;obligatoria;1;T_17_OB
18;Emulación en VHDL del computador que extiende la máquina del Prof. Peña;Emular en VHDL el computador que extiende la máquina del Prof. Peña.;automatizada;obligatoria;1;T_18_OB
19;Placa o circuito del computador que extiende la máquina del Prof. Peña;Diseñar la placa o circuito del computador que extiende la máquina del Prof. Peña.;automatizada;obligatoria;1;T_19_OB
20;Vocabulario para una calculadora aritmética sencilla;Desarrollar un vocabulario para una calculadora aritmética sencilla.;manuscrita;obligatoria;1;T_20_OB
21;Plural expresivo;Investigar y aplicar el concepto de plural expresivo.;manuscrita;obligatoria;1;T_21_OB
22;Lenguajes regulares vs. Lenguajes NO regulares;Comparar lenguajes regulares y lenguajes no regulares.;manuscrita;obligatoria;1;T_22_OB
23;Equivalencia de expresiones regulares caso sencillo;Demostrar la equivalencia de expresiones regulares en un caso sencillo.;manuscrita;obligatoria;1;T_23_OB
24;Equivalencia de expresiones regulares caso un poco menos sencillo;Demostrar la equivalencia de expresiones regulares en un caso más complejo.;manuscrita;obligatoria;1;T_24_OB
25;Patrón para reconocer identificadores en un lenguaje de programación hipotético;Desarrollar un patrón para reconocer identificadores en un lenguaje hipotético.;manuscrita;obligatoria;1;T_25_OB
26;Demostración de una ley algebraica de las expresiones regulares;Demostrar una ley algebraica de las expresiones regulares.;manuscrita;obligatoria;1;T_26_OB
27;Patrón para reconocer números complejos;Desarrollar un patrón para reconocer números complejos.;manuscrita;obligatoria;1;T_27_OB
28;Compilación y ejecución ejemplos en FLEX;Compilar y ejecutar ejemplos en FLEX.;automatizada;obligatoria;1;T_28_OB
29;Completar, compilar y ejecutar el analizador para la estructura de selección;Completar, compilar y ejecutar el analizador para la estructura de selección en FLEX.;automatizada;obligatoria;1;T_29_OB
30;Ampliar el analizador léxico para la «selección» agregándole la estructura «while»;Ampliar el analizador léxico para incluir la estructura 'while'.;automatizada;obligatoria;1;T_30_OB
31;Implementación de la distancia Damerau-Levenshtein en Excel;Implementar la distancia Damerau-Levenshtein en Excel.;automatizada;obligatoria;1;T_31_OB
32;Implementación de la distancia Damerau-Levenshtein en C++;Implementar la distancia Damerau-Levenshtein en C++.;automatizada;obligatoria;1;T_32_OB
33;Propuesta de una función de distancia propia para lenguajes;Proponer una función de distancia propia para lenguajes.;manuscrita;obligatoria;1;T_33_OB
34;Distancia en el ámbito semántico;Investigar la distancia en el ámbito semántico.;manuscrita;opcional;1;T_34_OP
35;Deducción de un lenguaje dada una gramática;Deducir un lenguaje dado una gramática específica.;manuscrita;opcional;1;T_35_OP
36;Gramática libre de contexto para una calculadora aritmética simple;Desarrollar una GLC para una calculadora aritmética simple.;manuscrita;opcional;1;T_36_OP
37;Determinar la GLC para una expresión regular;Determinar la GLC para una expresión regular.;manuscrita;opcional;1;T_37_OP
38;Diseño de un lenguaje de programación para un modelo de programación lineal;Diseñar un lenguaje de programación para un modelo de programación lineal.;manuscrita;opcional;1;T_38_OP
39;Diseño de un lenguaje de programación para expresiones booleanas;Diseñar un lenguaje de programación para expresiones booleanas.;manuscrita;opcional;1;T_39_OP
40;Lenguaje de programación para un “nuevo paradigma de programación”;Desarrollar un lenguaje de programación para un nuevo paradigma de programación.;manuscrita;opcional;1;T_40_OP
